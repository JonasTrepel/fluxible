[{"path":"https://jogaudard.github.io/fluxible/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://jogaudard.github.io/fluxible/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://jogaudard.github.io/fluxible/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://jogaudard.github.io/fluxible/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://jogaudard.github.io/fluxible/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://jogaudard.github.io/fluxible/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://jogaudard.github.io/fluxible/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://jogaudard.github.io/fluxible/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://jogaudard.github.io/fluxible/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://jogaudard.github.io/fluxible/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://jogaudard.github.io/fluxible/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://jogaudard.github.io/fluxible/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://jogaudard.github.io/fluxible/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://jogaudard.github.io/fluxible/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://jogaudard.github.io/fluxible/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://jogaudard.github.io/fluxible/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://jogaudard.github.io/fluxible/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://jogaudard.github.io/fluxible/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://jogaudard.github.io/fluxible/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://jogaudard.github.io/fluxible/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://jogaudard.github.io/fluxible/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://jogaudard.github.io/fluxible/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Joseph Gaudard. Author, maintainer. Richard J Telford. Author.","code":""},{"path":"https://jogaudard.github.io/fluxible/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gaudard J, Telford R (2024). fluxible: Calculate Ecosystem Gas Fluxes Raw Data. R package version 0.0.0.9000, https://jogaudard.github.io/fluxible/.","code":"@Manual{,   title = {fluxible: Calculate Ecosystem Gas Fluxes From Raw Data},   author = {Joseph Gaudard and Richard J Telford},   year = {2024},   note = {R package version 0.0.0.9000},   url = {https://jogaudard.github.io/fluxible/}, }"},{"path":"https://jogaudard.github.io/fluxible/index.html","id":"fluxible","dir":"","previous_headings":"","what":"Calculate Ecosystem Gas Fluxes From Raw Data","title":"Calculate Ecosystem Gas Fluxes From Raw Data","text":"Note: fluxible still early phase, fully functional can improved many ways. Please get touch problems suggestions. goal fluxible provide workflow removes individual evaluation flux, reduces risk bias, makes reproducible. Users set specific data quality standards selection parameters function arguments applied entire dataset. package runs calculations automatically, without prompting user take decisions mid-way, provides quality flags plots end process visual check. makes easy use large flux datasets integrate reproducible workflow. Using Fluxible R package makes workflow reproducible, increases compatibility across studies, time efficient. Fluxible R package made transform dataset gas concentration time flux dataset. originally made used closed loop chamber system connected gas analyzer. function use tent development (see developments).","code":""},{"path":"https://jogaudard.github.io/fluxible/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Calculate Ecosystem Gas Fluxes From Raw Data","text":"can install development version fluxible GitHub repo :","code":"# install.packages(\"devtools\") devtools::install_github(\"jogaudard/fluxible\")"},{"path":"https://jogaudard.github.io/fluxible/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Calculate Ecosystem Gas Fluxes From Raw Data","text":"basic example sample data Plant Functional Traits Course 6 (2022). flux_match function matches field measured gas concentration data flux meta data: calculate flux slopes flux necessary. flux_fitting function can provide linear exponential fit. Let’s start linear fit. assess quality fit use flux_quality. add quality flags advising calculated slopes kept, replaced 0 NA. Users still visual check flux_plot function. flux_plot function plots fluxes fluxID, modelled measured concentration, indicating quality flags color codes. plots can printed R console, saved pdf document easier use. Depending plots user can re-run flux_fitting cuts start end measurements (applied entire dataset), change type fit, decide exclude specific fluxes using ‘weird_fluxes’ argument.  using linear fit, might better use short portion start flux. can re run flux_fitting end cut, run flux_quality flux_plot see better.  exponential fit used similar way. uses exponential expression shown (zhaoCalculationDaytimeCO22018a?). quality assessment. default slope_col argument linear fit, now specify . plots also show modelled slope t zero.  , can try cut needed.  satisfied fit, can calculate fluxes flux_calc. output mmol/m2/h calculation used follow: $$  \\text{flux}=\\text{slope}\\times \\frac{P\\times V}{R\\times T\\times } $$ flux: flux gas surface plot (mmol/m2/h) slope: slope estimate (ppm*s-1) P: pressure, assumed (atm) V: volume chamber tubing (L) R: gas constant (0.082057 L*atm*K-1*mol-1) T: chamber air temperature (K) : area chamber frame base (m2)","code":"library(fluxible)  conc_liahovden <- flux_match(co2_liahovden, record_liahovden) head(conc_liahovden) #> # A tibble: 6 × 13 #>   f_datetime          temp_air temp_soil f_conc   PAR turfID   type  #>   <dttm>                 <dbl>     <dbl>  <dbl> <dbl> <chr>    <chr> #> 1 2022-07-27 05:37:40       NA        NA   465.    NA 4 AN1C 4 NEE   #> 2 2022-07-27 05:37:41       NA        NA   465.    NA 4 AN1C 4 NEE   #> 3 2022-07-27 05:37:42       NA        NA   465.    NA 4 AN1C 4 NEE   #> 4 2022-07-27 05:37:43       NA        NA   464.    NA 4 AN1C 4 NEE   #> 5 2022-07-27 05:37:44       NA        NA   464.    NA 4 AN1C 4 NEE   #> 6 2022-07-27 05:37:45       NA        NA   463.    NA 4 AN1C 4 NEE   #> # ℹ 6 more variables: f_start <dttm>, f_end <dttm>, f_fluxID <fct>, #> #   f_n_conc <int>, f_ratio <dbl>, f_flag_match <chr> slopes_lin_liahovden <- flux_fitting(conc_liahovden, fit_type = \"linear\") #> Warning in flux_fitting_lin(conc_df, start_cut = ((start_cut)), end_cut = ((end_cut)), :  #>  fluxID 77 : slope was estimated on 194 points out of 210 seconds because data are missing #>  fluxID 85 : slope was estimated on 175 points out of 210 seconds because data are missing head(slopes_lin_liahovden) #> # A tibble: 6 × 22 #>   f_datetime          temp_air temp_soil f_conc   PAR turfID   type  #>   <dttm>                 <dbl>     <dbl>  <dbl> <dbl> <chr>    <chr> #> 1 2022-07-27 05:37:40       NA        NA   465.    NA 4 AN1C 4 NEE   #> 2 2022-07-27 05:37:41       NA        NA   465.    NA 4 AN1C 4 NEE   #> 3 2022-07-27 05:37:42       NA        NA   465.    NA 4 AN1C 4 NEE   #> 4 2022-07-27 05:37:43       NA        NA   464.    NA 4 AN1C 4 NEE   #> 5 2022-07-27 05:37:44       NA        NA   464.    NA 4 AN1C 4 NEE   #> 6 2022-07-27 05:37:45       NA        NA   463.    NA 4 AN1C 4 NEE   #> # ℹ 15 more variables: f_start <dttm>, f_end <dttm>, f_fluxID <fct>, #> #   f_n_conc <int>, f_ratio <dbl>, f_flag_match <chr>, f_time <dbl>, #> #   f_cut <fct>, n_conc <int>, f_rsquared <dbl>, f_adj_rsquared <dbl>, #> #   f_pvalue <dbl>, f_intercept <dbl>, f_slope <dbl>, f_fit <dbl> slopes_lin_liahovden <- flux_quality(slopes_lin_liahovden, fit_type = \"lin\") head(slopes_lin_liahovden) #> # A tibble: 6 × 25 #>   f_datetime          temp_air temp_soil f_conc   PAR turfID   type  #>   <dttm>                 <dbl>     <dbl>  <dbl> <dbl> <chr>    <chr> #> 1 2022-07-27 05:37:40       NA        NA   465.    NA 4 AN1C 4 NEE   #> 2 2022-07-27 05:37:41       NA        NA   465.    NA 4 AN1C 4 NEE   #> 3 2022-07-27 05:37:42       NA        NA   465.    NA 4 AN1C 4 NEE   #> 4 2022-07-27 05:37:43       NA        NA   464.    NA 4 AN1C 4 NEE   #> 5 2022-07-27 05:37:44       NA        NA   464.    NA 4 AN1C 4 NEE   #> 6 2022-07-27 05:37:45       NA        NA   463.    NA 4 AN1C 4 NEE   #> # ℹ 18 more variables: f_start <dttm>, f_end <dttm>, f_fluxID <fct>, #> #   f_n_conc <int>, f_ratio <dbl>, f_flag_match <chr>, f_time <dbl>, #> #   f_cut <fct>, n_conc <int>, f_rsquared <dbl>, f_adj_rsquared <dbl>, #> #   f_pvalue <dbl>, f_intercept <dbl>, f_slope <dbl>, f_fit <dbl>, #> #   f_start_error <chr>, f_quality_flag <chr>, f_slope_corr <dbl> slopes_lin_liahovden |>   dplyr::filter(f_fluxID %in% c(53:56)) |> # we just show a sample of the plots to avoid slowing down the example     flux_plot(       fit_type = \"lin\",       print_plot = TRUE,       f_plotname = \"example_lia\",       f_ylim_lower = 300,       f_ylim_upper = 600,       f_nrow = 1,       y_text_position = 400       ) #> [1] \"Saving plots in f_quality_plots folder.\" slopes_lin_liahovden_120 <- conc_liahovden |>   flux_fitting(fit_type = \"linear\", end_cut = 120) |>     flux_quality(fit_type = \"linear\")  slopes_lin_liahovden_120 |>   dplyr::filter(f_fluxID %in% c(53:56)) |> # we just show a sample of the plots to avoid slowing down the example     flux_plot(       fit_type = \"lin\",       print_plot = TRUE,       f_plotname = \"example_lia_lin\",       f_ylim_lower = 300,       f_ylim_upper = 600,       f_nrow = 1,       y_text_position = 400       ) #> [1] \"Saving plots in f_quality_plots folder.\" slopes_exp_liahovden <- flux_fitting(conc_liahovden, fit_type = \"exponential\") #> Warning in flux_fitting_exp(conc_df, start_cut = ((start_cut)), end_cut = ((end_cut)), :  #>  fluxID 77 : slope was estimated on 194 points out of 210 seconds because data are missing #>  fluxID 85 : slope was estimated on 175 points out of 210 seconds because data are missing head(slopes_exp_liahovden) #> # A tibble: 6 × 30 #>   f_datetime          temp_air temp_soil f_conc   PAR turfID   type  #>   <dttm>                 <dbl>     <dbl>  <dbl> <dbl> <chr>    <chr> #> 1 2022-07-27 05:37:40       NA        NA   465.    NA 4 AN1C 4 NEE   #> 2 2022-07-27 05:37:41       NA        NA   465.    NA 4 AN1C 4 NEE   #> 3 2022-07-27 05:37:42       NA        NA   465.    NA 4 AN1C 4 NEE   #> 4 2022-07-27 05:37:43       NA        NA   464.    NA 4 AN1C 4 NEE   #> 5 2022-07-27 05:37:44       NA        NA   464.    NA 4 AN1C 4 NEE   #> 6 2022-07-27 05:37:45       NA        NA   463.    NA 4 AN1C 4 NEE   #> # ℹ 23 more variables: f_start <dttm>, f_end <dttm>, f_fluxID <fct>, #> #   f_n_conc <int>, f_ratio <dbl>, f_flag_match <chr>, f_time <dbl>, #> #   f_cut <fct>, n_conc <int>, Cm_est <dbl>, a_est <dbl>, b_est <dbl>, #> #   tz_est <dbl>, f_Cz <dbl>, time_diff <dbl>, f_Cm <dbl>, f_a <dbl>, #> #   f_b <dbl>, f_tz <dbl>, f_slope_tz <dbl>, f_fit <dbl>, f_fit_slope <dbl>, #> #   f_start_z <dttm> slopes_exp_liahovden <- flux_quality(slopes_exp_liahovden, fit_type = \"expo\", slope_col = \"f_slope_tz\") head(slopes_exp_liahovden) #> # A tibble: 6 × 37 #>   f_datetime          temp_air temp_soil f_conc   PAR turfID   type  #>   <dttm>                 <dbl>     <dbl>  <dbl> <dbl> <chr>    <chr> #> 1 2022-07-27 05:37:40       NA        NA   465.    NA 4 AN1C 4 NEE   #> 2 2022-07-27 05:37:41       NA        NA   465.    NA 4 AN1C 4 NEE   #> 3 2022-07-27 05:37:42       NA        NA   465.    NA 4 AN1C 4 NEE   #> 4 2022-07-27 05:37:43       NA        NA   464.    NA 4 AN1C 4 NEE   #> 5 2022-07-27 05:37:44       NA        NA   464.    NA 4 AN1C 4 NEE   #> 6 2022-07-27 05:37:45       NA        NA   463.    NA 4 AN1C 4 NEE   #> # ℹ 30 more variables: f_start <dttm>, f_end <dttm>, f_fluxID <fct>, #> #   f_n_conc <int>, f_ratio <dbl>, f_flag_match <chr>, f_time <dbl>, #> #   f_cut <fct>, n_conc <int>, Cm_est <dbl>, a_est <dbl>, b_est <dbl>, #> #   tz_est <dbl>, f_Cz <dbl>, time_diff <dbl>, f_Cm <dbl>, f_a <dbl>, #> #   f_b <dbl>, f_tz <dbl>, f_slope_tz <dbl>, f_fit <dbl>, f_fit_slope <dbl>, #> #   f_start_z <dttm>, f_cor_coef <dbl>, f_RMSE <dbl>, f_start_error <chr>, #> #   f_fit_quality <chr>, f_correlation <chr>, f_quality_flag <chr>, … slopes_exp_liahovden |>   dplyr::filter(f_fluxID %in% c(53:56)) |> # we just show a sample of the plots to avoid slowing down the example     flux_plot(       fit_type = \"exp\",       print_plot = TRUE,       f_plotname = \"example_lia_lin\",       f_ylim_lower = 300,       f_ylim_upper = 600,       f_nrow = 1,       y_text_position = 400       ) #> [1] \"Saving plots in f_quality_plots folder.\" slopes_exp_liahovden_30 <- conc_liahovden |>   flux_fitting(fit_type = \"exp\", start_cut = 30) |>     flux_quality(fit_type = \"exp\", slope_col = \"f_slope_tz\") #> Warning in flux_fitting_exp(conc_df, start_cut = ((start_cut)), end_cut = ((end_cut)), :  #>  fluxID 77 : slope was estimated on 164 points out of 180 seconds because data are missing #>  fluxID 85 : slope was estimated on 145 points out of 180 seconds because data are missing  slopes_exp_liahovden_30 |>   dplyr::filter(f_fluxID %in% c(53:56)) |> # we just show a sample of the plots to avoid slowing down the example     flux_plot(       fit_type = \"exp\",       print_plot = TRUE,       f_plotname = \"example_lia_lin\",       f_ylim_lower = 300,       f_ylim_upper = 600,       f_nrow = 1,       y_text_position = 400       ) #> [1] \"Saving plots in f_quality_plots folder.\" fluxes_exp_liahovden <- slopes_exp_liahovden |>   flux_calc(     slope_col = \"f_slope_corr\", # we use the slopes provided by flux_quality   ) # there is no need to specify the other arguments because the defaults are from our experiment, other users might want to check that head(fluxes_exp_liahovden) #> # A tibble: 6 × 4 #>   f_fluxID  f_slope temp_air_ave    flux #>   <fct>       <dbl>        <dbl>   <dbl> #> 1 1        -0.156           3.27  -9.76  #> 2 2         0.146           3.31   9.10  #> 3 3        -0.227           3.15 -14.2   #> 4 4         0.143           2.98   8.93  #> 5 5        -0.139           2.86  -8.67  #> 6 6        -0.00487         2.91  -0.304"},{"path":[]},{"path":"https://jogaudard.github.io/fluxible/index.html","id":"flux-tent","dir":"","previous_headings":"Further developments","what":"Flux tent","title":"Calculate Ecosystem Gas Fluxes From Raw Data","text":"Currently fluxible thought setups using flux chamber. Flux chambers can assumed leak. flux tents tend leak, different fitting function needed account potential leaks.","code":""},{"path":"https://jogaudard.github.io/fluxible/index.html","id":"more-fits","dir":"","previous_headings":"Further developments","what":"More fits","title":"Calculate Ecosystem Gas Fluxes From Raw Data","text":"want fluxible fit use many projects possible, fitting expressions included flux_fitting function. Feel welcome get touch wish include fluxible.","code":""},{"path":"https://jogaudard.github.io/fluxible/index.html","id":"contact","dir":"","previous_headings":"","what":"Contact","title":"Calculate Ecosystem Gas Fluxes From Raw Data","text":"Joseph Gaudard, University Bergen, Norway joseph.gaudard@pm.CV","code":""},{"path":"https://jogaudard.github.io/fluxible/index.html","id":"dissemination","dir":"","previous_headings":"","what":"Dissemination","title":"Calculate Ecosystem Gas Fluxes From Raw Data","text":"Gaudard, J., Telford, R., Vandvik, V., Halbritter, . H.: Fluxible: R package calculate ecosystem gas fluxes reproducible automated workflow., EGU General Assembly 2024, Vienna, Austria, 14–19 Apr 2024, EGU24-956, https://doi.org/10.5194/egusphere-egu24-956, 2024. Direct link poster","code":""},{"path":[]},{"path":"https://jogaudard.github.io/fluxible/reference/co2_conc.html","id":null,"dir":"Reference","previous_headings":"","what":"CO2 concentration — co2_conc","title":"CO2 concentration — co2_conc","text":"CO2 concentration measurements meta data","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/co2_conc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CO2 concentration — co2_conc","text":"","code":"co2_conc"},{"path":"https://jogaudard.github.io/fluxible/reference/co2_conc.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CO2 concentration — co2_conc","text":"tibble 1251 rows 13 variables datetime Datetime CO2 concentration recorded. temp_air Air temperature inside flux chamber Celsius. temp_soil Ground temperature inside flux chamber Celsius. conc CO2 concentration ppm. PAR Photosyntethically active radiation inside chamber micromol/s/sqm. turfID Unique ID turf measurement took place. type Type measurement: ecosystems respiration (ER) net ecosystem exchange (NEE). start Datetime measurement started. end Datetime measurement ended. fluxID Unique ID flux. n_conc Number data point per flux. ratio Ratio n_conc length measurement (seconds). flag Data quality flags.","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/co2_conc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CO2 concentration — co2_conc","text":"","code":"co2_conc #> # A tibble: 1,251 × 13 #>    f_datetime          temp_air temp_soil f_conc   PAR turfID       type  #>    <dttm>                 <dbl>     <dbl>  <dbl> <dbl> <fct>        <fct> #>  1 2022-07-28 23:43:35    NA         NA     447. NA    156 AN2C 156 ER    #>  2 2022-07-28 23:43:36     7.22      10.9   447.  1.68 156 AN2C 156 ER    #>  3 2022-07-28 23:43:37    NA         NA     448. NA    156 AN2C 156 ER    #>  4 2022-07-28 23:43:38    NA         NA     449. NA    156 AN2C 156 ER    #>  5 2022-07-28 23:43:39    NA         NA     449. NA    156 AN2C 156 ER    #>  6 2022-07-28 23:43:40    NA         NA     450. NA    156 AN2C 156 ER    #>  7 2022-07-28 23:43:41    NA         NA     451. NA    156 AN2C 156 ER    #>  8 2022-07-28 23:43:42    NA         NA     451. NA    156 AN2C 156 ER    #>  9 2022-07-28 23:43:43    NA         NA     453. NA    156 AN2C 156 ER    #> 10 2022-07-28 23:43:44    NA         NA     453. NA    156 AN2C 156 ER    #> # ℹ 1,241 more rows #> # ℹ 6 more variables: f_start <dttm>, f_end <dttm>, f_fluxID <fct>, #> #   n_conc <dbl>, ratio <dbl>, flag <chr>"},{"path":"https://jogaudard.github.io/fluxible/reference/co2_conc_missing.html","id":null,"dir":"Reference","previous_headings":"","what":"CO2 concentration — co2_conc_missing","title":"CO2 concentration — co2_conc_missing","text":"CO2 concentration measurements meta data, missing data.","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/co2_conc_missing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CO2 concentration — co2_conc_missing","text":"","code":"co2_conc_missing"},{"path":"https://jogaudard.github.io/fluxible/reference/co2_conc_missing.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CO2 concentration — co2_conc_missing","text":"tibble 668 rows 13 variables datetime Datetime CO2 concentration recorded. temp_air Air temperature inside flux chamber Celsius. temp_soil Ground temperature inside flux chamber Celsius. conc CO2 concentration ppm. PAR Photosyntethically active radiation inside chamber micromol/s/sqm. turfID Unique ID turf measurement took place. type Type measurement: ecosystems respiration (ER) net ecosystem exchange (NEE). start Datetime measurement started. end Datetime measurement ended. fluxID Unique ID flux. n_conc Number data point per flux. ratio Ratio n_conc length measurement (seconds). flag Data quality flags.","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/co2_conc_missing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CO2 concentration — co2_conc_missing","text":"","code":"co2_conc_missing #> # A tibble: 668 × 13 #>    f_datetime          temp_air temp_soil f_conc   PAR turfID       type  #>    <dttm>                 <dbl>     <dbl>  <dbl> <dbl> <fct>        <fct> #>  1 2022-07-28 23:43:35       NA        NA    NA     NA 156 AN2C 156 ER    #>  2 2022-07-28 23:45:37       NA        NA   514.    NA 156 AN2C 156 ER    #>  3 2022-07-28 23:45:38       NA        NA   513.    NA 156 AN2C 156 ER    #>  4 2022-07-28 23:45:39       NA        NA   513.    NA 156 AN2C 156 ER    #>  5 2022-07-28 23:45:40       NA        NA   514.    NA 156 AN2C 156 ER    #>  6 2022-07-28 23:45:41       NA        NA   514.    NA 156 AN2C 156 ER    #>  7 2022-07-28 23:45:42       NA        NA   515.    NA 156 AN2C 156 ER    #>  8 2022-07-28 23:45:43       NA        NA   515.    NA 156 AN2C 156 ER    #>  9 2022-07-28 23:45:44       NA        NA   515.    NA 156 AN2C 156 ER    #> 10 2022-07-28 23:45:45       NA        NA   515.    NA 156 AN2C 156 ER    #> # ℹ 658 more rows #> # ℹ 6 more variables: f_start <dttm>, f_end <dttm>, f_fluxID <fct>, #> #   n_conc <dbl>, ratio <dbl>, flag <chr>"},{"path":"https://jogaudard.github.io/fluxible/reference/co2_df_missing.html","id":null,"dir":"Reference","previous_headings":"","what":"CO2 concentration with missing data — co2_df_missing","title":"CO2 concentration with missing data — co2_df_missing","text":"Continuous CO2 concentration measured field, missing data.","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/co2_df_missing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CO2 concentration with missing data — co2_df_missing","text":"","code":"co2_df_missing"},{"path":"https://jogaudard.github.io/fluxible/reference/co2_df_missing.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CO2 concentration with missing data — co2_df_missing","text":"tibble 1148 rows 5 variables datetime Datetime CO2 concentration recorded. temp_air Air temperature inside flux chamber Celsius. temp_soil Ground temperature inside flux chamber Celsius. conc CO2 concentration ppm. PAR Photosyntethically active radiation inside chamber micromol/s/sqm.","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/co2_df_missing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CO2 concentration with missing data — co2_df_missing","text":"","code":"co2_df_missing #> # A tibble: 1,148 × 5 #>    datetime            temp_air temp_soil  conc   PAR #>    <dttm>                 <dbl>     <dbl> <dbl> <dbl> #>  1 2022-07-28 23:40:00    NA         NA    471. NA    #>  2 2022-07-28 23:40:01    NA         NA    472. NA    #>  3 2022-07-28 23:40:02    NA         NA    472. NA    #>  4 2022-07-28 23:40:03    NA         NA    473. NA    #>  5 2022-07-28 23:40:04    NA         NA    474. NA    #>  6 2022-07-28 23:40:05    NA         NA    475. NA    #>  7 2022-07-28 23:40:06     7.08      11.1  475.  2.44 #>  8 2022-07-28 23:40:07    NA         NA    476. NA    #>  9 2022-07-28 23:40:08    NA         NA    476. NA    #> 10 2022-07-28 23:40:09    NA         NA    477. NA    #> # ℹ 1,138 more rows"},{"path":"https://jogaudard.github.io/fluxible/reference/co2_df_short.html","id":null,"dir":"Reference","previous_headings":"","what":"CO2 concentration — co2_df_short","title":"CO2 concentration — co2_df_short","text":"Continous CO2 concentration measured field","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/co2_df_short.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CO2 concentration — co2_df_short","text":"","code":"co2_df_short"},{"path":"https://jogaudard.github.io/fluxible/reference/co2_df_short.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CO2 concentration — co2_df_short","text":"tibble 1801 rows 5 variables datetime Datetime CO2 concentration recorded. temp_air Air temperature inside flux chamber Celsius. temp_soil Ground temperature inside flux chamber Celsius. conc CO2 concentration ppm. PAR Photosyntethically active radiation inside chamber micromol/s/sqm.","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/co2_df_short.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CO2 concentration — co2_df_short","text":"","code":"co2_df_short #> # A tibble: 1,801 × 5 #>    datetime            temp_air temp_soil  conc   PAR #>    <dttm>                 <dbl>     <dbl> <dbl> <dbl> #>  1 2022-07-28 23:40:00    NA         NA    471. NA    #>  2 2022-07-28 23:40:01    NA         NA    472. NA    #>  3 2022-07-28 23:40:02    NA         NA    472. NA    #>  4 2022-07-28 23:40:03    NA         NA    473. NA    #>  5 2022-07-28 23:40:04    NA         NA    474. NA    #>  6 2022-07-28 23:40:05    NA         NA    475. NA    #>  7 2022-07-28 23:40:06     7.08      11.1  475.  2.44 #>  8 2022-07-28 23:40:07    NA         NA    476. NA    #>  9 2022-07-28 23:40:08    NA         NA    476. NA    #> 10 2022-07-28 23:40:09    NA         NA    477. NA    #> # ℹ 1,791 more rows"},{"path":"https://jogaudard.github.io/fluxible/reference/co2_fluxes.html","id":null,"dir":"Reference","previous_headings":"","what":"CO2 fluxes — co2_fluxes","title":"CO2 fluxes — co2_fluxes","text":"Calculated CO2 fluxes","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/co2_fluxes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CO2 fluxes — co2_fluxes","text":"","code":"co2_fluxes"},{"path":"https://jogaudard.github.io/fluxible/reference/co2_fluxes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CO2 fluxes — co2_fluxes","text":"tibble 6 rows 11 variables fluxID Unique ID flux. slope_tz Slope C(t) t zero. temp_air_ave Air temperature inside flux chamber Celsius averaged flux measurement. flux CO2 flux mmol/sqm/hour. PAR Photosyntethically active radiation inside chamber micromol/s/sqm averaged flux measurement. temp_soil Ground temperature inside flux chamber Celsius averaged flux measurement. turfID Unique ID turf measurement took place. type Type measurement: ecosystems respiration (ER) net ecosystem exchange (NEE). start Datetime measurement started. temp_fahr Air temperature inside flux chamber Fahrenheit averaged flux measurement. temp_kelvin Air temperature inside flux chamber Kelvin averaged flux measurement.","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/co2_fluxes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CO2 fluxes — co2_fluxes","text":"","code":"co2_fluxes #> # A tibble: 6 × 11 #>   f_fluxID f_slope_tz temp_air_ave  flux   PAR temp_soil turfID       type  #>   <fct>         <dbl>        <dbl> <dbl> <dbl>     <dbl> <fct>        <fct> #> 1 1             1.56          7.31  95.6  1.95      10.8 156 AN2C 156 ER    #> 2 2             0.853         7.38  52.4  2.11      10.7 74 WN2C 155  NEE   #> 3 3             0.303         7.46  18.6  2.04      10.7 74 WN2C 155  ER    #> 4 4             1.13          7.77  69.4  1.84      10.8 109 AN3C 109 NEE   #> 5 5             1.46          7.71  89.9  1.66      10.6 109 AN3C 109 ER    #> 6 6             0.426         7.75  26.2  1.78      12.2 29 WN3C 106  NEE   #> # ℹ 3 more variables: f_start <dttm>, temp_fahr <dbl>, temp_kelvin <dbl>"},{"path":"https://jogaudard.github.io/fluxible/reference/co2_liahovden.html","id":null,"dir":"Reference","previous_headings":"","what":"CO2 concentration at Liahovden — co2_liahovden","title":"CO2 concentration at Liahovden — co2_liahovden","text":"CO2 concentration Liahovden site, used example reamdme file","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/co2_liahovden.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CO2 concentration at Liahovden — co2_liahovden","text":"","code":"co2_liahovden"},{"path":"https://jogaudard.github.io/fluxible/reference/co2_liahovden.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CO2 concentration at Liahovden — co2_liahovden","text":"tibble 89692 rows 5 variables datetime Datetime CO2 concentration recorded. temp_air Air temperature inside flux chamber Celsius. temp_soil Ground temperature inside flux chamber Celsius. conc CO2 concentration ppm. PAR Photosyntethically active radiation inside chamber micromol/s/sqm.","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/co2_liahovden.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CO2 concentration at Liahovden — co2_liahovden","text":"","code":"co2_liahovden #> # A tibble: 89,692 × 5 #>    datetime            temp_air temp_soil  conc   PAR #>    <dttm>                 <dbl>     <dbl> <dbl> <dbl> #>  1 2022-07-27 05:34:49        3      2.96  468.  2.59 #>  2 2022-07-27 05:34:50       NA     NA     469. NA    #>  3 2022-07-27 05:34:51       NA     NA     468. NA    #>  4 2022-07-27 05:34:52       NA     NA     468. NA    #>  5 2022-07-27 05:34:53       NA     NA     468. NA    #>  6 2022-07-27 05:34:54       NA     NA     468. NA    #>  7 2022-07-27 05:34:55       NA     NA     468. NA    #>  8 2022-07-27 05:34:56       NA     NA     468. NA    #>  9 2022-07-27 05:34:57       NA     NA     467. NA    #> 10 2022-07-27 05:34:58       NA     NA     468. NA    #> # ℹ 89,682 more rows"},{"path":"https://jogaudard.github.io/fluxible/reference/flux_calc.html","id":null,"dir":"Reference","previous_headings":"","what":"calculates fluxes — flux_calc","title":"calculates fluxes — flux_calc","text":"calculates flux based rate change gas concentration time","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/flux_calc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calculates fluxes — flux_calc","text":"","code":"flux_calc(   slope_df,   slope_col,   chamber_volume = 24.5,   tube_volume = 0.075,   atm_pressure = 1,   plot_area = 0.0625,   R_const = 0.082057,   cols_keep = c(),   cols_ave = c(),   fluxID_col = \"f_fluxID\",   temp_air_col = \"temp_air\",   temp_air_unit = \"celsius\" )"},{"path":"https://jogaudard.github.io/fluxible/reference/flux_calc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calculates fluxes — flux_calc","text":"slope_df dataframe flux slopes slope_col column containing slope calculate flux chamber_volume volume flux chamber L, default Three-D project chamber (25x24.5x40cm) tube_volume volume tubing L, default summer 2020 setup atm_pressure atmoshperic pressure, assumed 1 atm plot_area area plot m^2, default Three-D R_const gas constant, LatmK^(-1)*mol^(-1) cols_keep columns keep input output. columns need unique values flux. cols_ave columns values averaged flux ouput. Note NA removed mean calculation fluxID_col column containing fluxID temp_air_col column containing air temperature used caculate fluxes. averaged NA removed. temp_air_unit units air temperature measured. either celsius, fahrenheit kelvin","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/flux_calc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"calculates fluxes — flux_calc","text":"df containing fluxID, fluxes, temperature average flux, slope used flux calculation, columns specified cols_keep cols_ave","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/flux_calc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"calculates fluxes — flux_calc","text":"","code":"data(slopes0) flux_calc(slopes0, slope_col = \"f_slope_tz\") #> # A tibble: 6 × 4 #>   f_fluxID f_slope temp_air_ave  flux #>      <dbl>   <dbl>        <dbl> <dbl> #> 1        1   1.56          7.31  95.6 #> 2        2   0.853         7.38  52.4 #> 3        3   0.303         7.46  18.6 #> 4        4   1.13          7.77  69.4 #> 5        5   1.46          7.71  89.9 #> 6        6   0.426         7.75  26.2"},{"path":"https://jogaudard.github.io/fluxible/reference/flux_fitting.html","id":null,"dir":"Reference","previous_headings":"","what":"wrap up function for fitting — flux_fitting","title":"wrap up function for fitting — flux_fitting","text":"fits gas concentration time exponential linear model","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/flux_fitting.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"wrap up function for fitting — flux_fitting","text":"","code":"flux_fitting(   conc_df,   start_cut = 0,   end_cut = 0,   start_col = \"f_start\",   end_col = \"f_end\",   datetime_col = \"f_datetime\",   conc_col = \"f_conc\",   fluxID_col = \"f_fluxID\",   t_window = 20,   Cz_window = 15,   b_window = 10,   a_window = 10,   roll_width = 15,   fit_type )"},{"path":"https://jogaudard.github.io/fluxible/reference/flux_fitting.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"wrap up function for fitting — flux_fitting","text":"conc_df dataframe gas concentration time start_cut cut start end_cut cut end, notice plots match precise enough start_col column datetime measurement started end_col column datetime measurement ended datetime_col column datetime concentration measurement conc_col column gas concentration data fluxID_col column ID flux t_window enlarge focus window tmin tmax Cz_window window used calculate Cz, beginning cut window b_window window estimate b. interval tz assumed C fits data perfectly a_window window end flux estimate roll_width width rolling mean CO2 looking tz, ideally Cz_window fit_type exponential linear, depending wish user. Exponential using fit described Zhao 2018","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/flux_fitting.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"wrap up function for fitting — flux_fitting","text":"dataframe slope t zero, modelled concentration time exponential expression parameters","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/flux_fitting.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"wrap up function for fitting — flux_fitting","text":"","code":"data(co2_conc) flux_fitting(co2_conc, fit_type = \"exp\") #> Warning:  #>  fluxID 5 : slope was estimated on 205 points out of 210 seconds because data are missing #>  fluxID 6 : slope was estimated on 206 points out of 210 seconds because data are missing #> # A tibble: 1,251 × 29 #>    f_datetime          temp_air temp_soil f_conc   PAR turfID       type  #>    <dttm>                 <dbl>     <dbl>  <dbl> <dbl> <fct>        <fct> #>  1 2022-07-28 23:43:35    NA         NA     447. NA    156 AN2C 156 ER    #>  2 2022-07-28 23:43:36     7.22      10.9   447.  1.68 156 AN2C 156 ER    #>  3 2022-07-28 23:43:37    NA         NA     448. NA    156 AN2C 156 ER    #>  4 2022-07-28 23:43:38    NA         NA     449. NA    156 AN2C 156 ER    #>  5 2022-07-28 23:43:39    NA         NA     449. NA    156 AN2C 156 ER    #>  6 2022-07-28 23:43:40    NA         NA     450. NA    156 AN2C 156 ER    #>  7 2022-07-28 23:43:41    NA         NA     451. NA    156 AN2C 156 ER    #>  8 2022-07-28 23:43:42    NA         NA     451. NA    156 AN2C 156 ER    #>  9 2022-07-28 23:43:43    NA         NA     453. NA    156 AN2C 156 ER    #> 10 2022-07-28 23:43:44    NA         NA     453. NA    156 AN2C 156 ER    #> # ℹ 1,241 more rows #> # ℹ 22 more variables: f_start <dttm>, f_end <dttm>, f_fluxID <fct>, #> #   n_conc <int>, ratio <dbl>, flag <chr>, f_time <dbl>, f_cut <fct>, #> #   Cm_est <dbl>, a_est <dbl>, b_est <dbl>, tz_est <dbl>, f_Cz <dbl>, #> #   time_diff <dbl>, f_Cm <dbl>, f_a <dbl>, f_b <dbl>, f_tz <dbl>, #> #   f_slope_tz <dbl>, f_fit <dbl>, f_fit_slope <dbl>, f_start_z <dttm>"},{"path":"https://jogaudard.github.io/fluxible/reference/flux_fitting_exp.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting a model to the gas concentration curve and estimating the slope — flux_fitting_exp","title":"Fitting a model to the gas concentration curve and estimating the slope — flux_fitting_exp","text":"Fits exponential expression concentration evolution time, described Zhao 2018","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/flux_fitting_exp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting a model to the gas concentration curve and estimating the slope — flux_fitting_exp","text":"","code":"flux_fitting_exp(   conc_df,   t_window = 20,   Cz_window = 15,   b_window = 10,   a_window = 10,   roll_width = 15,   start_cut = 0,   end_cut = 0,   start_col = \"f_start\",   end_col = \"f_end\",   datetime_col = \"f_datetime\",   conc_col = \"f_conc\",   fluxID_col = \"f_fluxID\" )"},{"path":"https://jogaudard.github.io/fluxible/reference/flux_fitting_exp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting a model to the gas concentration curve and estimating the slope — flux_fitting_exp","text":"conc_df dataframe gas concentration time t_window enlarge focus window tmin tmax Cz_window window used calculate Cz, beginning cut window b_window window estimate b. interval tz assumed C fits data perfectly a_window window end flux estimate roll_width width rolling mean CO2 looking tz, ideally Cz_window start_cut cut start end_cut cut end, notice plots match precise enough start_col column datetime measurement started end_col column datetime measurement ended datetime_col column datetime concentration measurement conc_col column gas concentration data fluxID_col column ID flux","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/flux_fitting_exp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitting a model to the gas concentration curve and estimating the slope — flux_fitting_exp","text":"dataframe slope t zero, modelled concentration time exponential expression parameters","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/flux_fitting_lin.html","id":null,"dir":"Reference","previous_headings":"","what":"linear fit to gas concentration over time — flux_fitting_lin","title":"linear fit to gas concentration over time — flux_fitting_lin","text":"fits linear model gas concentration time","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/flux_fitting_lin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"linear fit to gas concentration over time — flux_fitting_lin","text":"","code":"flux_fitting_lin(   conc_df,   start_cut = 0,   end_cut = 0,   start_col = \"f_start\",   end_col = \"f_end\",   datetime_col = \"f_datetime\",   conc_col = \"f_conc\",   fluxID_col = \"f_fluxID\" )"},{"path":"https://jogaudard.github.io/fluxible/reference/flux_fitting_lin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"linear fit to gas concentration over time — flux_fitting_lin","text":"conc_df dataframe gas concentration time start_cut cut start end_cut cut end, notice plots match precise enough start_col column datetime measurement started end_col column datetime measurement ended datetime_col column datetime concentration measurement conc_col column gas concentration data fluxID_col column ID flux","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/flux_fitting_lin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"linear fit to gas concentration over time — flux_fitting_lin","text":"df modelled gas concentration, slope, intercept, std error, r square p value linear model","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/flux_match.html","id":null,"dir":"Reference","previous_headings":"","what":"Matching continously measured fluxes with measurement IDs — flux_match","title":"Matching continously measured fluxes with measurement IDs — flux_match","text":"Function match dataframe continuously measured CO2 concentration measurement IDs another dataframe. Uses datetime tell measurements happened . Extra variables dataframes appear output.","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/flux_match.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Matching continously measured fluxes with measurement IDs — flux_match","text":"","code":"flux_match(   raw_conc,   field_record,   startcrop = 10,   measurement_length = 220,   ratio_threshold = 0.5,   time_diff = 0,   datetime_col = \"datetime\",   conc_col = \"conc\",   start_col = \"start\" )"},{"path":"https://jogaudard.github.io/fluxible/reference/flux_match.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Matching continously measured fluxes with measurement IDs — flux_match","text":"raw_conc dataframe CO2 concentration measured continuously. contain least datetime column ymd_hms format gas concentration column double. field_record dataframe recording measurement happened . contain least column telling time measurements started, column allowing identification measurements. startcrop many seconds discarded beginning measurement measurement_length length measurement (seconds) start specified field_record ratio_threshold ratio (number concentration measurement compared length measurement seconds) data flagged little time_diff time difference (seconds) two datasets. added datetime column raw_conc dataset datetime_col specify name datetime column raw_conc (dmy_hms format) conc_col specify name concentration column raw_conc start_col specify name start column field_record (dmy_hms format)","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/flux_match.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Matching continously measured fluxes with measurement IDs — flux_match","text":"dataframe concentration measurements, corresponding datetime, flux ID, start end measurement, flags case data low number data, variables present one inputs.","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/flux_match.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Matching continously measured fluxes with measurement IDs — flux_match","text":"","code":"data(co2_df_short, record_short) flux_match(co2_df_short, record_short) #> # A tibble: 1,251 × 13 #>    f_datetime          temp_air temp_soil f_conc   PAR turfID       type  #>    <dttm>                 <dbl>     <dbl>  <dbl> <dbl> <chr>        <chr> #>  1 2022-07-28 23:43:35    NA         NA     447. NA    156 AN2C 156 ER    #>  2 2022-07-28 23:43:36     7.22      10.9   447.  1.68 156 AN2C 156 ER    #>  3 2022-07-28 23:43:37    NA         NA     448. NA    156 AN2C 156 ER    #>  4 2022-07-28 23:43:38    NA         NA     449. NA    156 AN2C 156 ER    #>  5 2022-07-28 23:43:39    NA         NA     449. NA    156 AN2C 156 ER    #>  6 2022-07-28 23:43:40    NA         NA     450. NA    156 AN2C 156 ER    #>  7 2022-07-28 23:43:41    NA         NA     451. NA    156 AN2C 156 ER    #>  8 2022-07-28 23:43:42    NA         NA     451. NA    156 AN2C 156 ER    #>  9 2022-07-28 23:43:43    NA         NA     453. NA    156 AN2C 156 ER    #> 10 2022-07-28 23:43:44    NA         NA     453. NA    156 AN2C 156 ER    #> # ℹ 1,241 more rows #> # ℹ 6 more variables: f_start <dttm>, f_end <dttm>, f_fluxID <fct>, #> #   f_n_conc <int>, f_ratio <dbl>, f_flag_match <chr>"},{"path":"https://jogaudard.github.io/fluxible/reference/flux_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"ploting fluxes for fit evaluation — flux_plot","title":"ploting fluxes for fit evaluation — flux_plot","text":"plots fluxes indicates discarded replaced zero","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/flux_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ploting fluxes for fit evaluation — flux_plot","text":"","code":"flux_plot(   slopes_df,   fit_type,   datetime_col = \"f_datetime\",   conc_col = \"f_conc\",   cut_col = \"f_cut\",   fit_col = \"f_fit\",   fit_slope_col = \"f_fit_slope\",   quality_flag_col = \"f_quality_flag\",   fluxID_col = \"f_fluxID\",   pvalue_col = \"f_pvalue\",   rsquared_col = \"f_rsquared\",   start_col = \"f_start\",   b_col = \"f_b\",   cor_coef_col = \"f_cor_coef\",   RMSE_col = \"f_RMSE\",   color_discard = \"#D55E00\",   color_cut = \"#D55E00\",   color_keep = \"#009E73\",   color_ok = \"#000000\",   color_zero = \"#CC79A7\",   f_date_breaks = \"1 min\",   f_minor_breaks = \"10 sec\",   f_date_labels = \"%e/%m \\n %H:%M\",   f_ylim_upper = 800,   f_ylim_lower = 400,   f_scales = \"free\",   f_plotname = \"plot_quality\",   f_ncol = 4,   f_nrow = 3,   y_text_position = 500,   f_nudge_y = 100,   print_plot = \"FALSE\" )"},{"path":"https://jogaudard.github.io/fluxible/reference/flux_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ploting fluxes for fit evaluation — flux_plot","text":"slopes_df dataset containing slopes fit_type model used flux_fitting, exponential linear datetime_col column containing datetime concentration measurement conc_col column containing gas concentration data cut_col column containing cut factor flux_fitting function (\"cut\" \"keep\") fit_col column containing modelled fit flux fit_slope_col column containing modelled slope tz quality_flag_col column containing flags produced flux_quality fluxID_col column containing unique IDs flux pvalue_col column containing p-value flux rsquared_col column containing r squared used quality assessment start_col column containing datetime start flux b_col column containing b parameter exponential fit cor_coef_col column containing correlation coefficient produced flux_quality RMSE_col column containing RMSE produced flux_quality color_discard color fits discard quality flag color_cut color part flux cut color_keep color part flux kept color_ok color fits ok quality flag color_zero color fits zero quality flag f_date_breaks date_breaks argument scale_x_datetime f_minor_breaks minor breaks argument scale_x_datetime f_date_labels date_labels argument scale_x_datetime f_ylim_upper y axis upper limit f_ylim_lower y axis lower limit f_scales argument scales facet_wrap (\"fixed\" \"free\") f_plotname filename extracted pdf file f_ncol ncol argument facet_wrap f_nrow number row per page extracted pdf file y_text_position position text box f_nudge_y nudge text box parameters modelled flux print_plot FALSE TRUE, TRUE prints plot R take time depending size dataset","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/flux_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ploting fluxes for fit evaluation — flux_plot","text":"","code":"data(slopes0_flag) flux_plot(slopes0_flag, fit_type = \"exp\", fit_slope_col = \"f_fit_slope\", print_plot = TRUE) #> [1] \"Saving plots in f_quality_plots folder.\"  data(slopes30lin_flag) flux_plot(slopes30lin_flag, fit_type = \"lin\", print_plot = TRUE) #> [1] \"Saving plots in f_quality_plots folder.\""},{"path":"https://jogaudard.github.io/fluxible/reference/flux_plot_exp.html","id":null,"dir":"Reference","previous_headings":"","what":"ploting fluxes for fit evaluation — flux_plot_exp","title":"ploting fluxes for fit evaluation — flux_plot_exp","text":"plots fluxes indicates discarded replaced zero","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/flux_plot_exp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ploting fluxes for fit evaluation — flux_plot_exp","text":"","code":"flux_plot_exp(   slopes_df,   datetime_col = \"f_datetime\",   conc_col = \"f_conc\",   cut_col = \"f_cut\",   fit_col = \"f_fit\",   fit_slope_col = \"f_fit_slope\",   quality_flag_col = \"f_quality_flag\",   fluxID_col = \"f_fluxID\",   start_col = \"f_start\",   b_col = \"f_b\",   cor_coef_col = \"f_cor_coef\",   RMSE_col = \"f_RMSE\",   color_discard = \"#D55E00\",   color_cut = \"#D55E00\",   color_keep = \"#009E73\",   color_ok = \"#000000\",   color_zero = \"#CC79A7\",   f_date_breaks = \"1 min\",   f_minor_breaks = \"10 sec\",   f_date_labels = \"%e/%m \\n %H:%M\",   f_ylim_upper = 800,   f_ylim_lower = 400,   f_scales = \"free\",   f_plotname = \"plot_quality_exp\",   f_ncol = 4,   f_nrow = 3,   y_text_position = 500,   f_nudge_y = 100,   print_plot = \"FALSE\" )"},{"path":"https://jogaudard.github.io/fluxible/reference/flux_plot_exp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ploting fluxes for fit evaluation — flux_plot_exp","text":"slopes_df dataset containing slopes datetime_col column containing datetime concentration measurement conc_col column containing gas concentration data cut_col column containing cut factor flux_fitting function (\"cut\" \"keep\") fit_col column containing modelled fit flux fit_slope_col column containing modelled slope tz quality_flag_col column containing flags produced flux_quality fluxID_col column containing unique IDs flux start_col column containing datetime start flux b_col column containing b parameter exponential fit cor_coef_col column containing correlation coefficient produced flux_quality RMSE_col column containing RMSE produced flux_quality color_discard color fits discard quality flag color_cut color part flux cut color_keep color part flux kept color_ok color fits ok quality flag color_zero color fits zero quality flag f_date_breaks date_breaks argument scale_x_datetime f_minor_breaks minor breaks argument scale_x_datetime f_date_labels date_labels argument scale_x_datetime f_ylim_upper y axis upper limit f_ylim_lower y axis lower limit f_scales argument scales facet_wrap (\"fixed\" \"free\") f_plotname filename extracted pdf file f_ncol ncol argument facet_wrap f_nrow number row per page extracted pdf file y_text_position position text box f_nudge_y nudge text box parameters modelled flux print_plot FALSE TRUE, TRUE prints plot R take time depending size dataset","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/flux_plot_lin.html","id":null,"dir":"Reference","previous_headings":"","what":"ploting fluxes for fit evaluation — flux_plot_lin","title":"ploting fluxes for fit evaluation — flux_plot_lin","text":"plots fluxes indicates discarded replaced zero","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/flux_plot_lin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ploting fluxes for fit evaluation — flux_plot_lin","text":"","code":"flux_plot_lin(   slopes_df,   datetime_col = \"f_datetime\",   conc_col = \"f_conc\",   cut_col = \"f_cut\",   fit_col = \"f_fit\",   quality_flag_col = \"f_quality_flag\",   fluxID_col = \"f_fluxID\",   pvalue_col = \"f_pvalue\",   rsquared_col = \"f_rsquared\",   start_col = \"f_start\",   color_discard = \"#D55E00\",   color_cut = \"#D55E00\",   color_keep = \"#009E73\",   color_ok = \"#000000\",   color_zero = \"#CC79A7\",   f_date_breaks = \"1 min\",   f_minor_breaks = \"10 sec\",   f_date_labels = \"%e/%m \\n %H:%M\",   f_ylim_upper = 800,   f_ylim_lower = 400,   f_scales = \"free\",   f_plotname = \"plot_quality_lin\",   f_ncol = 4,   f_nrow = 3,   y_text_position = 500,   f_nudge_y = 100,   print_plot = \"FALSE\" )"},{"path":"https://jogaudard.github.io/fluxible/reference/flux_plot_lin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ploting fluxes for fit evaluation — flux_plot_lin","text":"slopes_df dataset containing slopes datetime_col column containing datetime concentration measurement conc_col column containing gas concentration data cut_col column containing cut factor flux_fitting function (\"cut\" \"keep\") fit_col column containing modelled fit flux quality_flag_col column containing flags produced flux_quality fluxID_col column containing unique IDs flux pvalue_col column containing p-value flux rsquared_col column containing r squared used quality assessment start_col column containing datetime start flux color_discard color fits discard quality flag color_cut color part flux cut color_keep color part flux kept color_ok color fits ok quality flag color_zero color fits zero quality flag f_date_breaks date_breaks argument scale_x_datetime f_minor_breaks minor breaks argument scale_x_datetime f_date_labels date_labels argument scale_x_datetime f_ylim_upper y axis upper limit f_ylim_lower y axis lower limit f_scales argument scales facet_wrap (\"fixed\" \"free\") f_plotname filename extracted pdf file f_ncol ncol argument facet_wrap f_nrow number row per page extracted pdf file y_text_position position text box f_nudge_y nudge text box parameters modelled flux print_plot FALSE TRUE, TRUE prints plot R take time depending size dataset","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/flux_quality.html","id":null,"dir":"Reference","previous_headings":"","what":"assessing quality of slopes calculated — flux_quality","title":"assessing quality of slopes calculated — flux_quality","text":"indicates fluxes discarded replaced 0 according parameters set user","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/flux_quality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"assessing quality of slopes calculated — flux_quality","text":"","code":"flux_quality(   slopes_df,   fit_type,   ambient_conc = 421,   error = 100,   fluxID_col = \"f_fluxID\",   slope_col = \"f_slope\",   weird_fluxesID = c(),   pvalue_col = \"f_pvalue\",   rsquared_col = \"f_rsquared\",   pvalue_threshold = 0.3,   rsquared_threshold = 0.7,   conc_col = \"f_conc\",   b_col = \"f_b\",   time_col = \"f_time\",   fit_col = \"f_fit\",   cut_col = \"f_cut\",   RMSE_threshold = 25,   cor_threshold = 0.5,   b_threshold = 1 )"},{"path":"https://jogaudard.github.io/fluxible/reference/flux_quality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"assessing quality of slopes calculated — flux_quality","text":"slopes_df dataset containing slopes fit_type expression used fit data, linear exponential ambient_conc ambient gas concentration ppm site measurement (used detect measurement started polluted setup) error error setup, defines window starting values considered acceptable fluxID_col column containing unique IDs flux slope_col column containing slope flux (calculated flux_fitting function) weird_fluxesID vector fluxIDs discarded user's decision pvalue_col column containing p-value flux (linear fit) rsquared_col column containing r squared used quality assessment (linear fit) pvalue_threshold threshold p-value change gas concentration time considered significant (linear fit) rsquared_threshold threshold r squared value linear model considered unsatisfactory fit (linear fit) conc_col column containing measured gas concentration (exponential fit) b_col column containing b parameter exponential expression (exponential fit) time_col column containing time measurement seconds (exponential fit) fit_col column containing modeled data (exponential fit) cut_col column containing cutting information RMSE_threshold threshold RMSE flux fit considered unsatisfactory (exponential fit) cor_threshold threshold correlation coefficient gas concentration time correlation considered non significant (exponential fit) b_threshold threshold b parameter. Defines window opposite inside fit considered good enough (exponential fit)","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/flux_quality.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"assessing quality of slopes calculated — flux_quality","text":"dataframe added flag corrected slopes columns","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/flux_quality.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"assessing quality of slopes calculated — flux_quality","text":"","code":"data(slopes0lin) flux_quality(slopes0lin, fit_type = \"li\") #> # A tibble: 1,251 × 24 #>    f_datetime          temp_air temp_soil f_conc   PAR turfID       type  #>    <dttm>                 <dbl>     <dbl>  <dbl> <dbl> <fct>        <fct> #>  1 2022-07-28 23:43:35    NA         NA     447. NA    156 AN2C 156 ER    #>  2 2022-07-28 23:43:36     7.22      10.9   447.  1.68 156 AN2C 156 ER    #>  3 2022-07-28 23:43:37    NA         NA     448. NA    156 AN2C 156 ER    #>  4 2022-07-28 23:43:38    NA         NA     449. NA    156 AN2C 156 ER    #>  5 2022-07-28 23:43:39    NA         NA     449. NA    156 AN2C 156 ER    #>  6 2022-07-28 23:43:40    NA         NA     450. NA    156 AN2C 156 ER    #>  7 2022-07-28 23:43:41    NA         NA     451. NA    156 AN2C 156 ER    #>  8 2022-07-28 23:43:42    NA         NA     451. NA    156 AN2C 156 ER    #>  9 2022-07-28 23:43:43    NA         NA     453. NA    156 AN2C 156 ER    #> 10 2022-07-28 23:43:44    NA         NA     453. NA    156 AN2C 156 ER    #> # ℹ 1,241 more rows #> # ℹ 17 more variables: f_start <dttm>, f_end <dttm>, f_fluxID <fct>, #> #   n_conc <dbl>, ratio <dbl>, flag <chr>, f_time <dbl>, f_cut <fct>, #> #   f_pvalue <dbl>, f_rsquared <dbl>, f_adj_rsquared <dbl>, f_intercept <dbl>, #> #   f_slope <dbl>, f_fit <dbl>, f_start_error <chr>, f_quality_flag <chr>, #> #   f_slope_corr <dbl>"},{"path":"https://jogaudard.github.io/fluxible/reference/flux_quality_exp.html","id":null,"dir":"Reference","previous_headings":"","what":"assessing fluxes quality calculated with an exponential fit quality assessment for the fluxes calculated with the exponential model — flux_quality_exp","title":"assessing fluxes quality calculated with an exponential fit quality assessment for the fluxes calculated with the exponential model — flux_quality_exp","text":"indicates fluxes discarded replaced 0 according parameters set user","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/flux_quality_exp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"assessing fluxes quality calculated with an exponential fit quality assessment for the fluxes calculated with the exponential model — flux_quality_exp","text":"","code":"flux_quality_exp(   slopes_df,   ambient_conc = 421,   error = 100,   fluxID_col = \"f_fluxID\",   slope_col = \"f_slope\",   weird_fluxesID = c(),   conc_col = \"f_conc\",   b_col = \"f_b\",   time_col = \"f_time\",   fit_col = \"f_fit\",   cut_col = \"f_cut\",   RMSE_threshold = 25,   cor_threshold = 0.5,   b_threshold = 1 )"},{"path":"https://jogaudard.github.io/fluxible/reference/flux_quality_exp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"assessing fluxes quality calculated with an exponential fit quality assessment for the fluxes calculated with the exponential model — flux_quality_exp","text":"slopes_df dataset containing slopes, fluxID, parameters exponential expression ambient_conc ambient gas concentration ppm site measurement (used detect measurement started polluted setup) error error setup, defines window starting values considered acceptable fluxID_col column containing unique IDs flux slope_col column containing slope exponential expression used calculation weird_fluxesID vector fluxIDs discarded user's decision conc_col column containing measured gas concentration b_col column containing b parameter exponential expression time_col column containing time measurement seconds fit_col column containing modeled data cut_col column containing cutting information RMSE_threshold threshold RMSE flux fit considered unsatisfactory cor_threshold threshold correlation coefficient gas concentration time correlation considered non significant b_threshold threshold b parameter. Defines window opposite inside fit considered good enough.","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/flux_quality_exp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"assessing fluxes quality calculated with an exponential fit quality assessment for the fluxes calculated with the exponential model — flux_quality_exp","text":"dataframe added flag corrected slopes columns","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/flux_quality_lin.html","id":null,"dir":"Reference","previous_headings":"","what":"quality assessment for the fluxes calculated with the linear model — flux_quality_lin","title":"quality assessment for the fluxes calculated with the linear model — flux_quality_lin","text":"indicates fluxes discarded replaced 0 according parameters set user","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/flux_quality_lin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"quality assessment for the fluxes calculated with the linear model — flux_quality_lin","text":"","code":"flux_quality_lin(   slopes_df,   ambient_conc = 421,   error = 100,   fluxID_col = \"f_fluxID\",   slope_col = \"f_slope\",   conc_col = \"f_conc\",   weird_fluxesID = c(),   pvalue_col = \"f_pvalue\",   rsquared_col = \"f_rsquared\",   pvalue_threshold = 0.3,   rsquared_threshold = 0.7 )"},{"path":"https://jogaudard.github.io/fluxible/reference/flux_quality_lin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"quality assessment for the fluxes calculated with the linear model — flux_quality_lin","text":"slopes_df dataset containing slopes, fluxID, p.value r.squared ambient_conc ambient gas concentration ppm site measurement (used detect measurement started polluted setup) error error setup, defines window starting values considered acceptable fluxID_col column containing unique IDs flux slope_col column containing slope flux (calculated flux_fitting function) conc_col column containing measured gas concentration weird_fluxesID vector fluxIDs discarded user's decision pvalue_col column containing p-value flux rsquared_col column containing r squared used quality assessment pvalue_threshold threshold p-value change gas concentration time considered significant (user decided) rsquared_threshold threshold r squared value linear model considered unsatisfactory fit","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/flux_quality_lin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"quality assessment for the fluxes calculated with the linear model — flux_quality_lin","text":"dataframe added flag corrected slopes columns","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/record_liahovden.html","id":null,"dir":"Reference","previous_headings":"","what":"Measurements meta data at Liahovden — record_liahovden","title":"Measurements meta data at Liahovden — record_liahovden","text":"Measurements meta data recorded field site Liahovden","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/record_liahovden.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Measurements meta data at Liahovden — record_liahovden","text":"","code":"record_liahovden"},{"path":"https://jogaudard.github.io/fluxible/reference/record_liahovden.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Measurements meta data at Liahovden — record_liahovden","text":"tibble 138 rows 3 variables turfID Unique ID turf measurement took place. type Type measurement: ecosystems respiration (ER) net ecosystem exchange (NEE). start Datetime measurement started.","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/record_liahovden.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Measurements meta data at Liahovden — record_liahovden","text":"","code":"record_liahovden #> # A tibble: 138 × 3 #>    turfID     type  start               #>    <chr>      <chr> <dttm>              #>  1 4 AN1C 4   NEE   2022-07-27 05:37:30 #>  2 4 AN1C 4   ER    2022-07-27 05:42:00 #>  3 27 AN3C 27 NEE   2022-07-27 05:46:55 #>  4 27 AN3C 27 ER    2022-07-27 05:50:45 #>  5 77 AN2C 77 NEE   2022-07-27 05:57:30 #>  6 77 AN2C 77 ER    2022-07-27 06:02:00 #>  7 4 AN1C 4   NEE   2022-07-27 06:32:00 #>  8 4 AN1C 4   ER    2022-07-27 06:36:30 #>  9 27 AN3C 27 NEE   2022-07-27 06:41:15 #> 10 27 AN3C 27 ER    2022-07-27 06:45:50 #> # ℹ 128 more rows"},{"path":"https://jogaudard.github.io/fluxible/reference/record_short.html","id":null,"dir":"Reference","previous_headings":"","what":"Measurements meta data — record_short","title":"Measurements meta data — record_short","text":"Measurements meta data recorded field","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/record_short.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Measurements meta data — record_short","text":"","code":"record_short"},{"path":"https://jogaudard.github.io/fluxible/reference/record_short.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Measurements meta data — record_short","text":"tibble 6 rows 3 variables turfID Unique ID turf measurement took place. type Type measurement: ecosystems respiration (ER) net ecosystem exchange (NEE). start Datetime measurement started.","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/record_short.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Measurements meta data — record_short","text":"","code":"record_short #> # A tibble: 6 × 3 #>   turfID       type  start               #>   <chr>        <chr> <dttm>              #> 1 156 AN2C 156 ER    2022-07-28 23:43:25 #> 2 74 WN2C 155  NEE   2022-07-28 23:47:12 #> 3 74 WN2C 155  ER    2022-07-28 23:52:00 #> 4 109 AN3C 109 NEE   2022-07-28 23:59:22 #> 5 109 AN3C 109 ER    2022-07-29 00:03:00 #> 6 29 WN3C 106  NEE   2022-07-29 00:06:25"},{"path":"https://jogaudard.github.io/fluxible/reference/slopes0.html","id":null,"dir":"Reference","previous_headings":"","what":"Slopes for each flux — slopes0","title":"Slopes for each flux — slopes0","text":"Slopes C(t) flux without cut.","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/slopes0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Slopes for each flux — slopes0","text":"","code":"slopes0"},{"path":"https://jogaudard.github.io/fluxible/reference/slopes0.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Slopes for each flux — slopes0","text":"tibble 1251 rows 28 variables datetime Datetime CO2 concentration recorded. temp_air Air temperature inside flux chamber Celsius. temp_soil Ground temperature inside flux chamber Celsius. conc CO2 concentration ppm. PAR Photosyntethically active radiation inside chamber micromol/s/sqm. turfID Unique ID turf measurement took place. type Type measurement: ecosystems respiration (ER) net ecosystem exchange (NEE). start Datetime measurement started. end Datetime measurement ended. fluxID Unique ID flux. n_conc Number data point per flux. ratio Ratio n_conc length measurement (seconds). flag Data quality flags. time Time variable flux seconds. cut Indicating measurement kept (keep) discarded (cut). Cm_est Estimation Cm parameter. a_est Estimation parameter. b_est Estimation b parameter. tz_est Estimation tz parameter. Cz Cz parameter C(t) function. Cm Cm parameter C(t) function, calculated optim() Cm_est starting point. parameter C(t) function, calculated optim() a_est starting point. b b parameter C(t) function, calculated optim() b_est starting point. tz tz parameter C(t) function, calculated optim() tz_est starting point. slope_tz Slope C(t) tz fit C(t), modelled CO2 concentration function time. fit_slope Output linear model CO2 concentration passing C(tz) slope slope_tz. start_z Datetime format tz","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/slopes0.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Slopes for each flux — slopes0","text":"","code":"slopes0 #> # A tibble: 1,251 × 29 #>    f_datetime          temp_air temp_soil f_conc   PAR turfID       type  #>    <dttm>                 <dbl>     <dbl>  <dbl> <dbl> <chr>        <chr> #>  1 2022-07-28 23:43:35    NA         NA     447. NA    156 AN2C 156 ER    #>  2 2022-07-28 23:43:36     7.22      10.9   447.  1.68 156 AN2C 156 ER    #>  3 2022-07-28 23:43:37    NA         NA     448. NA    156 AN2C 156 ER    #>  4 2022-07-28 23:43:38    NA         NA     449. NA    156 AN2C 156 ER    #>  5 2022-07-28 23:43:39    NA         NA     449. NA    156 AN2C 156 ER    #>  6 2022-07-28 23:43:40    NA         NA     450. NA    156 AN2C 156 ER    #>  7 2022-07-28 23:43:41    NA         NA     451. NA    156 AN2C 156 ER    #>  8 2022-07-28 23:43:42    NA         NA     451. NA    156 AN2C 156 ER    #>  9 2022-07-28 23:43:43    NA         NA     453. NA    156 AN2C 156 ER    #> 10 2022-07-28 23:43:44    NA         NA     453. NA    156 AN2C 156 ER    #> # ℹ 1,241 more rows #> # ℹ 22 more variables: f_start <dttm>, f_end <dttm>, f_fluxID <dbl>, #> #   n_conc <dbl>, ratio <dbl>, flag <lgl>, f_time <dbl>, f_cut <chr>, #> #   Cm_est <dbl>, a_est <dbl>, b_est <dbl>, tz_est <dbl>, f_Cz <dbl>, #> #   time_diff <dbl>, f_Cm <dbl>, f_a <dbl>, f_b <dbl>, f_tz <dbl>, #> #   f_slope_tz <dbl>, f_fit <dbl>, f_fit_slope <dbl>, f_start_z <dttm>"},{"path":"https://jogaudard.github.io/fluxible/reference/slopes0_flag.html","id":null,"dir":"Reference","previous_headings":"","what":"Slopes for each flux — slopes0_flag","title":"Slopes for each flux — slopes0_flag","text":"Slopes C(t) flux 0 second cut, quality flags.","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/slopes0_flag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Slopes for each flux — slopes0_flag","text":"","code":"slopes0_flag"},{"path":"https://jogaudard.github.io/fluxible/reference/slopes0_flag.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Slopes for each flux — slopes0_flag","text":"tibble 1251 rows 36 variables datetime Datetime CO2 concentration recorded. temp_air Air temperature inside flux chamber Celsius. temp_soil Ground temperature inside flux chamber Celsius. f_conc CO2 concentration ppm. PAR Photosyntethically active radiation inside chamber micromol/s/sqm. turfID Unique ID turf measurement took place. type Type measurement: ecosystems respiration (ER) net ecosystem exchange (NEE). start Datetime measurement started. end Datetime measurement ended. f_fluxID Unique ID flux. n_conc Number data point per flux. ratio Ratio n_conc length measurement (seconds). flag Data quality flags. f_time Time variable flux seconds. f_cut Indicating measurement kept (keep) discarded (cut). Cm_est Estimation Cm parameter. a_est Estimation parameter. b_est Estimation b parameter. tz_est Estimation tz parameter. Cz Cz parameter C(t) function. Cm Cm parameter C(t) function, calculated optim() Cm_est starting point. parameter C(t) function, calculated optim() a_est starting point. f_b b parameter C(t) function, calculated optim() b_est starting point. tz tz parameter C(t) function, calculated optim() tz_est starting point. f_slope_tz Slope C(t) tz f_fit C(t), modelled CO2 concentration function time. fit_slope Output linear model CO2 concentration passing C(tz) slope slope_tz. start_z Datetime format tz f_cor_coef coefficient correlation gas concentration time f_RMSE RMSE exponential fit measured data f_start_error flagging measurement started outside possible ambiant concentration f_fit_quality flagging bad fit f_correlation flagging correlation gas concentrationa time f_quality_flag quality flag advising slope replaced 0 NA f_slope_corr slope corrected according quality flag","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/slopes0_flag.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Slopes for each flux — slopes0_flag","text":"","code":"slopes0_flag #> # A tibble: 1,251 × 36 #>    f_datetime          temp_air temp_soil f_conc   PAR turfID       type  #>    <dttm>                 <dbl>     <dbl>  <dbl> <dbl> <chr>        <chr> #>  1 2022-07-28 23:43:35    NA         NA     447. NA    156 AN2C 156 ER    #>  2 2022-07-28 23:43:36     7.22      10.9   447.  1.68 156 AN2C 156 ER    #>  3 2022-07-28 23:43:37    NA         NA     448. NA    156 AN2C 156 ER    #>  4 2022-07-28 23:43:38    NA         NA     449. NA    156 AN2C 156 ER    #>  5 2022-07-28 23:43:39    NA         NA     449. NA    156 AN2C 156 ER    #>  6 2022-07-28 23:43:40    NA         NA     450. NA    156 AN2C 156 ER    #>  7 2022-07-28 23:43:41    NA         NA     451. NA    156 AN2C 156 ER    #>  8 2022-07-28 23:43:42    NA         NA     451. NA    156 AN2C 156 ER    #>  9 2022-07-28 23:43:43    NA         NA     453. NA    156 AN2C 156 ER    #> 10 2022-07-28 23:43:44    NA         NA     453. NA    156 AN2C 156 ER    #> # ℹ 1,241 more rows #> # ℹ 29 more variables: f_start <dttm>, f_end <dttm>, f_fluxID <dbl>, #> #   n_conc <dbl>, ratio <dbl>, flag <lgl>, f_time <dbl>, f_cut <chr>, #> #   Cm_est <dbl>, a_est <dbl>, b_est <dbl>, tz_est <dbl>, f_Cz <dbl>, #> #   time_diff <dbl>, f_Cm <dbl>, f_a <dbl>, f_b <dbl>, f_tz <dbl>, #> #   f_slope_tz <dbl>, f_fit <dbl>, f_fit_slope <dbl>, f_start_z <dttm>, #> #   f_cor_coef <dbl>, f_RMSE <dbl>, f_start_error <chr>, f_fit_quality <chr>, …"},{"path":"https://jogaudard.github.io/fluxible/reference/slopes0_temp.html","id":null,"dir":"Reference","previous_headings":"","what":"Slopes for each flux — slopes0_temp","title":"Slopes for each flux — slopes0_temp","text":"Slopes C(t) flux air temperature various units.","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/slopes0_temp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Slopes for each flux — slopes0_temp","text":"","code":"slopes0_temp"},{"path":"https://jogaudard.github.io/fluxible/reference/slopes0_temp.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Slopes for each flux — slopes0_temp","text":"tibble 1251 rows 30 variables datetime Datetime CO2 concentration recorded. temp_air Air temperature inside flux chamber Celsius. temp_soil Ground temperature inside flux chamber Celsius. conc CO2 concentration ppm. PAR Photosyntethically active radiation inside chamber micromol/s/sqm. turfID Unique ID turf measurement took place. type Type measurement: ecosystems respiration (ER) net ecosystem exchange (NEE). start Datetime measurement started. end Datetime measurement ended. fluxID Unique ID flux. n_conc Number data point per flux. ratio Ratio n_conc length measurement (seconds). flag Data quality flags. time Time variable flux seconds. cut Indicating measurement kept (keep) discarded (cut). Cm_est Estimation Cm parameter. a_est Estimation parameter. b_est Estimation b parameter. tz_est Estimation tz parameter. Cz Cz parameter C(t) function. Cm Cm parameter C(t) function, calculated optim() Cm_est starting point. parameter C(t) function, calculated optim() a_est starting point. b b parameter C(t) function, calculated optim() b_est starting point. tz tz parameter C(t) function, calculated optim() tz_est starting point. slope_tz Slope C(t) tz fit C(t), modelled CO2 concentration function time. fit_slope Output linear model CO2 concentration passing C(tz) slope slope_tz. start_z Datetime format tz temp_fahr Air temperature inside flux chamber Fahrenheit averaged flux measurement. temp_kelvin Air temperature inside flux chamber Kelvin averaged flux measurement.","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/slopes0_temp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Slopes for each flux — slopes0_temp","text":"","code":"slopes0_temp #> # A tibble: 1,251 × 31 #>    f_datetime          temp_air temp_soil f_conc   PAR turfID       type  #>    <dttm>                 <dbl>     <dbl>  <dbl> <dbl> <chr>        <chr> #>  1 2022-07-28 23:43:35    NA         NA     447. NA    156 AN2C 156 ER    #>  2 2022-07-28 23:43:36     7.22      10.9   447.  1.68 156 AN2C 156 ER    #>  3 2022-07-28 23:43:37    NA         NA     448. NA    156 AN2C 156 ER    #>  4 2022-07-28 23:43:38    NA         NA     449. NA    156 AN2C 156 ER    #>  5 2022-07-28 23:43:39    NA         NA     449. NA    156 AN2C 156 ER    #>  6 2022-07-28 23:43:40    NA         NA     450. NA    156 AN2C 156 ER    #>  7 2022-07-28 23:43:41    NA         NA     451. NA    156 AN2C 156 ER    #>  8 2022-07-28 23:43:42    NA         NA     451. NA    156 AN2C 156 ER    #>  9 2022-07-28 23:43:43    NA         NA     453. NA    156 AN2C 156 ER    #> 10 2022-07-28 23:43:44    NA         NA     453. NA    156 AN2C 156 ER    #> # ℹ 1,241 more rows #> # ℹ 24 more variables: f_start <dttm>, f_end <dttm>, f_fluxID <dbl>, #> #   n_conc <dbl>, ratio <dbl>, flag <lgl>, f_time <dbl>, f_cut <chr>, #> #   Cm_est <dbl>, a_est <dbl>, b_est <dbl>, tz_est <dbl>, f_Cz <dbl>, #> #   time_diff <dbl>, f_Cm <dbl>, f_a <dbl>, f_b <dbl>, f_tz <dbl>, #> #   f_slope_tz <dbl>, f_fit <dbl>, f_fit_slope <dbl>, f_start_z <dttm>, #> #   temp_fahr <dbl>, temp_kelvin <dbl>"},{"path":"https://jogaudard.github.io/fluxible/reference/slopes0lin.html","id":null,"dir":"Reference","previous_headings":"","what":"Slopes for each flux — slopes0lin","title":"Slopes for each flux — slopes0lin","text":"Slopes linear fit flux without cut.","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/slopes0lin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Slopes for each flux — slopes0lin","text":"","code":"slopes0lin"},{"path":"https://jogaudard.github.io/fluxible/reference/slopes0lin.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Slopes for each flux — slopes0lin","text":"tibble 1251 rows 22 variables datetime Datetime CO2 concentration recorded. temp_air Air temperature inside flux chamber Celsius. temp_soil Ground temperature inside flux chamber Celsius. conc CO2 concentration ppm. PAR Photosyntethically active radiation inside chamber micromol/s/sqm. turfID Unique ID turf measurement took place. type Type measurement: ecosystems respiration (ER) net ecosystem exchange (NEE). start Datetime measurement started. end Datetime measurement ended. fluxID Unique ID flux. n_conc Number data point per flux. ratio Ratio n_conc length measurement (seconds). flag Data quality flags. time Time variable flux seconds. cut Indicating measurement kept (keep) discarded (cut). p.value P-value linear model CO2 concentration time. r.squared R squared linear model CO2 concentration time. adj.r.squared Adjusted R squared linear model CO2 concentration time. intercept Intercept linear model CO2 concentration time. slope Slope linear model CO2 concentration time. fit Output linear model CO2 concentration time.","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/slopes0lin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Slopes for each flux — slopes0lin","text":"","code":"slopes0lin #> # A tibble: 1,251 × 21 #>    f_datetime          temp_air temp_soil f_conc   PAR turfID       type  #>    <dttm>                 <dbl>     <dbl>  <dbl> <dbl> <fct>        <fct> #>  1 2022-07-28 23:43:35    NA         NA     447. NA    156 AN2C 156 ER    #>  2 2022-07-28 23:43:36     7.22      10.9   447.  1.68 156 AN2C 156 ER    #>  3 2022-07-28 23:43:37    NA         NA     448. NA    156 AN2C 156 ER    #>  4 2022-07-28 23:43:38    NA         NA     449. NA    156 AN2C 156 ER    #>  5 2022-07-28 23:43:39    NA         NA     449. NA    156 AN2C 156 ER    #>  6 2022-07-28 23:43:40    NA         NA     450. NA    156 AN2C 156 ER    #>  7 2022-07-28 23:43:41    NA         NA     451. NA    156 AN2C 156 ER    #>  8 2022-07-28 23:43:42    NA         NA     451. NA    156 AN2C 156 ER    #>  9 2022-07-28 23:43:43    NA         NA     453. NA    156 AN2C 156 ER    #> 10 2022-07-28 23:43:44    NA         NA     453. NA    156 AN2C 156 ER    #> # ℹ 1,241 more rows #> # ℹ 14 more variables: f_start <dttm>, f_end <dttm>, f_fluxID <fct>, #> #   n_conc <dbl>, ratio <dbl>, flag <chr>, f_time <dbl>, f_cut <fct>, #> #   f_pvalue <dbl>, f_rsquared <dbl>, f_adj_rsquared <dbl>, f_intercept <dbl>, #> #   f_slope <dbl>, f_fit <dbl>"},{"path":"https://jogaudard.github.io/fluxible/reference/slopes0lin_flag.html","id":null,"dir":"Reference","previous_headings":"","what":"Slopes for each flux — slopes0lin_flag","title":"Slopes for each flux — slopes0lin_flag","text":"Slopes linear fit flux without cut, quality flags.","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/slopes0lin_flag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Slopes for each flux — slopes0lin_flag","text":"","code":"slopes0lin_flag"},{"path":"https://jogaudard.github.io/fluxible/reference/slopes0lin_flag.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Slopes for each flux — slopes0lin_flag","text":"tibble 1251 rows 22 variables datetime Datetime CO2 concentration recorded. temp_air Air temperature inside flux chamber Celsius. temp_soil Ground temperature inside flux chamber Celsius. f_conc CO2 concentration ppm. PAR Photosyntethically active radiation inside chamber micromol/s/sqm. turfID Unique ID turf measurement took place. type Type measurement: ecosystems respiration (ER) net ecosystem exchange (NEE). start Datetime measurement started. end Datetime measurement ended. f_fluxID Unique ID flux. n_conc Number data point per flux. ratio Ratio n_conc length measurement (seconds). flag Data quality flags. time Time variable flux seconds. cut Indicating measurement kept (keep) discarded (cut). f_pvalue P-value linear model CO2 concentration time. f_rsquared R squared linear model CO2 concentration time. adj.r.squared Adjusted R squared linear model CO2 concentration time. intercept Intercept linear model CO2 concentration time. f_slope Slope linear model CO2 concentration time. fit Output linear model CO2 concentration time. f_start_error flagging measurement started outside possible ambiant concentration f_quality_flag quality flag advising slope replaced 0 NA f_slope_corr slope corrected according quality flag","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/slopes0lin_flag.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Slopes for each flux — slopes0lin_flag","text":"","code":"slopes0lin_flag #> # A tibble: 1,251 × 24 #>    f_datetime          temp_air temp_soil f_conc   PAR turfID       type  #>    <dttm>                 <dbl>     <dbl>  <dbl> <dbl> <fct>        <fct> #>  1 2022-07-28 23:43:35    NA         NA     447. NA    156 AN2C 156 ER    #>  2 2022-07-28 23:43:36     7.22      10.9   447.  1.68 156 AN2C 156 ER    #>  3 2022-07-28 23:43:37    NA         NA     448. NA    156 AN2C 156 ER    #>  4 2022-07-28 23:43:38    NA         NA     449. NA    156 AN2C 156 ER    #>  5 2022-07-28 23:43:39    NA         NA     449. NA    156 AN2C 156 ER    #>  6 2022-07-28 23:43:40    NA         NA     450. NA    156 AN2C 156 ER    #>  7 2022-07-28 23:43:41    NA         NA     451. NA    156 AN2C 156 ER    #>  8 2022-07-28 23:43:42    NA         NA     451. NA    156 AN2C 156 ER    #>  9 2022-07-28 23:43:43    NA         NA     453. NA    156 AN2C 156 ER    #> 10 2022-07-28 23:43:44    NA         NA     453. NA    156 AN2C 156 ER    #> # ℹ 1,241 more rows #> # ℹ 17 more variables: f_start <dttm>, f_end <dttm>, f_fluxID <fct>, #> #   n_conc <dbl>, ratio <dbl>, flag <chr>, f_time <dbl>, f_cut <fct>, #> #   f_pvalue <dbl>, f_rsquared <dbl>, f_adj_rsquared <dbl>, f_intercept <dbl>, #> #   f_slope <dbl>, f_fit <dbl>, f_start_error <chr>, f_quality_flag <chr>, #> #   f_slope_corr <dbl>"},{"path":"https://jogaudard.github.io/fluxible/reference/slopes30.html","id":null,"dir":"Reference","previous_headings":"","what":"Slopes for each flux — slopes30","title":"Slopes for each flux — slopes30","text":"Slopes C(t) flux 30 seconds cut end flux.","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/slopes30.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Slopes for each flux — slopes30","text":"","code":"slopes30"},{"path":"https://jogaudard.github.io/fluxible/reference/slopes30.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Slopes for each flux — slopes30","text":"tibble 1251 rows 28 variables datetime Datetime CO2 concentration recorded. temp_air Air temperature inside flux chamber Celsius. temp_soil Ground temperature inside flux chamber Celsius. conc CO2 concentration ppm. PAR Photosyntethically active radiation inside chamber micromol/s/sqm. turfID Unique ID turf measurement took place. type Type measurement: ecosystems respiration (ER) net ecosystem exchange (NEE). start Datetime measurement started. end Datetime measurement ended. fluxID Unique ID flux. n_conc Number data point per flux. ratio Ratio n_conc length measurement (seconds). flag Data quality flags. time Time variable flux seconds. cut Indicating measurement kept (keep) discarded (cut). Cm_est Estimation Cm parameter. a_est Estimation parameter. b_est Estimation b parameter. tz_est Estimation tz parameter. Cz Cz parameter C(t) function. Cm Cm parameter C(t) function, calculated optim() Cm_est starting point. parameter C(t) function, calculated optim() a_est starting point. b b parameter C(t) function, calculated optim() b_est starting point. tz tz parameter C(t) function, calculated optim() tz_est starting point. slope_tz Slope C(t) tz fit C(t), modelled CO2 concentration function time. fit_slope Output linear model CO2 concentration passing C(tz) slope slope_tz. start_z Datetime format tz","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/slopes30.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Slopes for each flux — slopes30","text":"","code":"slopes30 #> # A tibble: 1,251 × 29 #>    f_datetime          temp_air temp_soil f_conc   PAR turfID       type  #>    <dttm>                 <dbl>     <dbl>  <dbl> <dbl> <chr>        <chr> #>  1 2022-07-28 23:43:35    NA         NA     447. NA    156 AN2C 156 ER    #>  2 2022-07-28 23:43:36     7.22      10.9   447.  1.68 156 AN2C 156 ER    #>  3 2022-07-28 23:43:37    NA         NA     448. NA    156 AN2C 156 ER    #>  4 2022-07-28 23:43:38    NA         NA     449. NA    156 AN2C 156 ER    #>  5 2022-07-28 23:43:39    NA         NA     449. NA    156 AN2C 156 ER    #>  6 2022-07-28 23:43:40    NA         NA     450. NA    156 AN2C 156 ER    #>  7 2022-07-28 23:43:41    NA         NA     451. NA    156 AN2C 156 ER    #>  8 2022-07-28 23:43:42    NA         NA     451. NA    156 AN2C 156 ER    #>  9 2022-07-28 23:43:43    NA         NA     453. NA    156 AN2C 156 ER    #> 10 2022-07-28 23:43:44    NA         NA     453. NA    156 AN2C 156 ER    #> # ℹ 1,241 more rows #> # ℹ 22 more variables: f_start <dttm>, f_end <dttm>, f_fluxID <dbl>, #> #   n_conc <dbl>, ratio <dbl>, flag <lgl>, f_time <dbl>, f_cut <chr>, #> #   Cm_est <dbl>, a_est <dbl>, b_est <dbl>, tz_est <dbl>, f_Cz <dbl>, #> #   time_diff <dbl>, f_Cm <dbl>, f_a <dbl>, f_b <dbl>, f_tz <dbl>, #> #   f_slope_tz <dbl>, f_fit <dbl>, f_fit_slope <dbl>, f_start_z <dttm>"},{"path":"https://jogaudard.github.io/fluxible/reference/slopes30_flag.html","id":null,"dir":"Reference","previous_headings":"","what":"Slopes for each flux — slopes30_flag","title":"Slopes for each flux — slopes30_flag","text":"Slopes C(t) flux 30 seconds end cut, quality flags.","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/slopes30_flag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Slopes for each flux — slopes30_flag","text":"","code":"slopes30_flag"},{"path":"https://jogaudard.github.io/fluxible/reference/slopes30_flag.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Slopes for each flux — slopes30_flag","text":"tibble 1251 rows 36 variables datetime Datetime CO2 concentration recorded. temp_air Air temperature inside flux chamber Celsius. temp_soil Ground temperature inside flux chamber Celsius. f_conc CO2 concentration ppm. PAR Photosyntethically active radiation inside chamber micromol/s/sqm. turfID Unique ID turf measurement took place. type Type measurement: ecosystems respiration (ER) net ecosystem exchange (NEE). start Datetime measurement started. end Datetime measurement ended. f_fluxID Unique ID flux. n_conc Number data point per flux. ratio Ratio n_conc length measurement (seconds). flag Data quality flags. f_time Time variable flux seconds. f_cut Indicating measurement kept (keep) discarded (cut). Cm_est Estimation Cm parameter. a_est Estimation parameter. b_est Estimation b parameter. tz_est Estimation tz parameter. Cz Cz parameter C(t) function. Cm Cm parameter C(t) function, calculated optim() Cm_est starting point. parameter C(t) function, calculated optim() a_est starting point. f_b b parameter C(t) function, calculated optim() b_est starting point. tz tz parameter C(t) function, calculated optim() tz_est starting point. f_slope_tz Slope C(t) tz f_fit C(t), modelled CO2 concentration function time. fit_slope Output linear model CO2 concentration passing C(tz) slope slope_tz. start_z Datetime format tz f_cor_coef coefficient correlation gas concentration time f_RMSE RMSE exponential fit measured data f_start_error flagging measurement started outside possible ambiant concentration f_fit_quality flagging bad fit f_correlation flagging correlation gas concentrationa time f_quality_flag quality flag advising slope replaced 0 NA f_slope_corr slope corrected according quality flag","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/slopes30_flag.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Slopes for each flux — slopes30_flag","text":"","code":"slopes30_flag #> # A tibble: 1,251 × 36 #>    f_datetime          temp_air temp_soil f_conc   PAR turfID       type  #>    <dttm>                 <dbl>     <dbl>  <dbl> <dbl> <chr>        <chr> #>  1 2022-07-28 23:43:35    NA         NA     447. NA    156 AN2C 156 ER    #>  2 2022-07-28 23:43:36     7.22      10.9   447.  1.68 156 AN2C 156 ER    #>  3 2022-07-28 23:43:37    NA         NA     448. NA    156 AN2C 156 ER    #>  4 2022-07-28 23:43:38    NA         NA     449. NA    156 AN2C 156 ER    #>  5 2022-07-28 23:43:39    NA         NA     449. NA    156 AN2C 156 ER    #>  6 2022-07-28 23:43:40    NA         NA     450. NA    156 AN2C 156 ER    #>  7 2022-07-28 23:43:41    NA         NA     451. NA    156 AN2C 156 ER    #>  8 2022-07-28 23:43:42    NA         NA     451. NA    156 AN2C 156 ER    #>  9 2022-07-28 23:43:43    NA         NA     453. NA    156 AN2C 156 ER    #> 10 2022-07-28 23:43:44    NA         NA     453. NA    156 AN2C 156 ER    #> # ℹ 1,241 more rows #> # ℹ 29 more variables: f_start <dttm>, f_end <dttm>, f_fluxID <dbl>, #> #   n_conc <dbl>, ratio <dbl>, flag <lgl>, f_time <dbl>, f_cut <chr>, #> #   Cm_est <dbl>, a_est <dbl>, b_est <dbl>, tz_est <dbl>, f_Cz <dbl>, #> #   time_diff <dbl>, f_Cm <dbl>, f_a <dbl>, f_b <dbl>, f_tz <dbl>, #> #   f_slope_tz <dbl>, f_fit <dbl>, f_fit_slope <dbl>, f_start_z <dttm>, #> #   f_cor_coef <dbl>, f_RMSE <dbl>, f_start_error <chr>, f_fit_quality <chr>, …"},{"path":"https://jogaudard.github.io/fluxible/reference/slopes30lin.html","id":null,"dir":"Reference","previous_headings":"","what":"Slopes for each flux — slopes30lin","title":"Slopes for each flux — slopes30lin","text":"Slopes linear fit flux 30 seconds cut end flux.","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/slopes30lin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Slopes for each flux — slopes30lin","text":"","code":"slopes30lin"},{"path":"https://jogaudard.github.io/fluxible/reference/slopes30lin.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Slopes for each flux — slopes30lin","text":"tibble 1251 rows 22 variables datetime Datetime CO2 concentration recorded. temp_air Air temperature inside flux chamber Celsius. temp_soil Ground temperature inside flux chamber Celsius. conc CO2 concentration ppm. PAR Photosyntethically active radiation inside chamber micromol/s/sqm. turfID Unique ID turf measurement took place. type Type measurement: ecosystems respiration (ER) net ecosystem exchange (NEE). start Datetime measurement started. end Datetime measurement ended. fluxID Unique ID flux. n_conc Number data point per flux. ratio Ratio n_conc length measurement (seconds). flag Data quality flags. time Time variable flux seconds. cut Indicating measurement kept (keep) discarded (cut). p.value P-value linear model CO2 concentration time. r.squared R squared linear model CO2 concentration time. adj.r.squared Adjusted R squared linear model CO2 concentration time. intercept Intercept linear model CO2 concentration time. slope Slope linear model CO2 concentration time. fit Output linear model CO2 concentration time.","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/slopes30lin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Slopes for each flux — slopes30lin","text":"","code":"slopes30lin #> # A tibble: 1,251 × 21 #>    f_datetime          temp_air temp_soil f_conc   PAR turfID       type  #>    <dttm>                 <dbl>     <dbl>  <dbl> <dbl> <fct>        <fct> #>  1 2022-07-28 23:43:35    NA         NA     447. NA    156 AN2C 156 ER    #>  2 2022-07-28 23:43:36     7.22      10.9   447.  1.68 156 AN2C 156 ER    #>  3 2022-07-28 23:43:37    NA         NA     448. NA    156 AN2C 156 ER    #>  4 2022-07-28 23:43:38    NA         NA     449. NA    156 AN2C 156 ER    #>  5 2022-07-28 23:43:39    NA         NA     449. NA    156 AN2C 156 ER    #>  6 2022-07-28 23:43:40    NA         NA     450. NA    156 AN2C 156 ER    #>  7 2022-07-28 23:43:41    NA         NA     451. NA    156 AN2C 156 ER    #>  8 2022-07-28 23:43:42    NA         NA     451. NA    156 AN2C 156 ER    #>  9 2022-07-28 23:43:43    NA         NA     453. NA    156 AN2C 156 ER    #> 10 2022-07-28 23:43:44    NA         NA     453. NA    156 AN2C 156 ER    #> # ℹ 1,241 more rows #> # ℹ 14 more variables: f_start <dttm>, f_end <dttm>, f_fluxID <fct>, #> #   n_conc <dbl>, ratio <dbl>, flag <chr>, f_time <dbl>, f_cut <fct>, #> #   f_pvalue <dbl>, f_rsquared <dbl>, f_adj_rsquared <dbl>, f_intercept <dbl>, #> #   f_slope <dbl>, f_fit <dbl>"},{"path":"https://jogaudard.github.io/fluxible/reference/slopes30lin_flag.html","id":null,"dir":"Reference","previous_headings":"","what":"Slopes for each flux — slopes30lin_flag","title":"Slopes for each flux — slopes30lin_flag","text":"Slopes linear fit flux 30 seconds end cut, quality flags.","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/slopes30lin_flag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Slopes for each flux — slopes30lin_flag","text":"","code":"slopes30lin_flag"},{"path":"https://jogaudard.github.io/fluxible/reference/slopes30lin_flag.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Slopes for each flux — slopes30lin_flag","text":"tibble 1251 rows 22 variables datetime Datetime CO2 concentration recorded. temp_air Air temperature inside flux chamber Celsius. temp_soil Ground temperature inside flux chamber Celsius. f_conc CO2 concentration ppm. PAR Photosyntethically active radiation inside chamber micromol/s/sqm. turfID Unique ID turf measurement took place. type Type measurement: ecosystems respiration (ER) net ecosystem exchange (NEE). start Datetime measurement started. end Datetime measurement ended. f_fluxID Unique ID flux. n_conc Number data point per flux. ratio Ratio n_conc length measurement (seconds). flag Data quality flags. time Time variable flux seconds. cut Indicating measurement kept (keep) discarded (cut). f_pvalue P-value linear model CO2 concentration time. f_rsquared R squared linear model CO2 concentration time. adj.r.squared Adjusted R squared linear model CO2 concentration time. intercept Intercept linear model CO2 concentration time. f_slope Slope linear model CO2 concentration time. fit Output linear model CO2 concentration time. f_start_error flagging measurement started outside possible ambiant concentration f_quality_flag quality flag advising slope replaced 0 NA f_slope_corr slope corrected according quality flag","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/slopes30lin_flag.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Slopes for each flux — slopes30lin_flag","text":"","code":"slopes30lin_flag #> # A tibble: 1,251 × 24 #>    f_datetime          temp_air temp_soil f_conc   PAR turfID       type  #>    <dttm>                 <dbl>     <dbl>  <dbl> <dbl> <fct>        <fct> #>  1 2022-07-28 23:43:35    NA         NA     447. NA    156 AN2C 156 ER    #>  2 2022-07-28 23:43:36     7.22      10.9   447.  1.68 156 AN2C 156 ER    #>  3 2022-07-28 23:43:37    NA         NA     448. NA    156 AN2C 156 ER    #>  4 2022-07-28 23:43:38    NA         NA     449. NA    156 AN2C 156 ER    #>  5 2022-07-28 23:43:39    NA         NA     449. NA    156 AN2C 156 ER    #>  6 2022-07-28 23:43:40    NA         NA     450. NA    156 AN2C 156 ER    #>  7 2022-07-28 23:43:41    NA         NA     451. NA    156 AN2C 156 ER    #>  8 2022-07-28 23:43:42    NA         NA     451. NA    156 AN2C 156 ER    #>  9 2022-07-28 23:43:43    NA         NA     453. NA    156 AN2C 156 ER    #> 10 2022-07-28 23:43:44    NA         NA     453. NA    156 AN2C 156 ER    #> # ℹ 1,241 more rows #> # ℹ 17 more variables: f_start <dttm>, f_end <dttm>, f_fluxID <fct>, #> #   n_conc <dbl>, ratio <dbl>, flag <chr>, f_time <dbl>, f_cut <fct>, #> #   f_pvalue <dbl>, f_rsquared <dbl>, f_adj_rsquared <dbl>, f_intercept <dbl>, #> #   f_slope <dbl>, f_fit <dbl>, f_start_error <chr>, f_quality_flag <chr>, #> #   f_slope_corr <dbl>"},{"path":"https://jogaudard.github.io/fluxible/reference/slopes60.html","id":null,"dir":"Reference","previous_headings":"","what":"Slopes for each flux — slopes60","title":"Slopes for each flux — slopes60","text":"Slopes C(t) flux cut 60 seconds end flux.","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/slopes60.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Slopes for each flux — slopes60","text":"","code":"slopes60"},{"path":"https://jogaudard.github.io/fluxible/reference/slopes60.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Slopes for each flux — slopes60","text":"tibble 1251 rows 28 variables datetime Datetime CO2 concentration recorded. temp_air Air temperature inside flux chamber Celsius. temp_soil Ground temperature inside flux chamber Celsius. conc CO2 concentration ppm. PAR Photosyntethically active radiation inside chamber micromol/s/sqm. turfID Unique ID turf measurement took place. type Type measurement: ecosystems respiration (ER) net ecosystem exchange (NEE). start Datetime measurement started. end Datetime measurement ended. fluxID Unique ID flux. n_conc Number data point per flux. ratio Ratio n_conc length measurement (seconds). flag Data quality flags. time Time variable flux seconds. cut Indicating measurement kept (keep) discarded (cut). Cm_est Estimation Cm parameter. a_est Estimation parameter. b_est Estimation b parameter. tz_est Estimation tz parameter. Cz Cz parameter C(t) function. Cm Cm parameter C(t) function, calculated optim() Cm_est starting point. parameter C(t) function, calculated optim() a_est starting point. b b parameter C(t) function, calculated optim() b_est starting point. tz tz parameter C(t) function, calculated optim() tz_est starting point. slope_tz Slope C(t) tz fit C(t), modelled CO2 concentration function time. fit_slope Output linear model CO2 concentration passing C(tz) slope slope_tz. start_z Datetime format tz","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/slopes60.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Slopes for each flux — slopes60","text":"","code":"slopes60 #> # A tibble: 1,251 × 29 #>    f_datetime          temp_air temp_soil f_conc   PAR turfID       type  #>    <dttm>                 <dbl>     <dbl>  <dbl> <dbl> <chr>        <chr> #>  1 2022-07-28 23:43:35    NA         NA     447. NA    156 AN2C 156 ER    #>  2 2022-07-28 23:43:36     7.22      10.9   447.  1.68 156 AN2C 156 ER    #>  3 2022-07-28 23:43:37    NA         NA     448. NA    156 AN2C 156 ER    #>  4 2022-07-28 23:43:38    NA         NA     449. NA    156 AN2C 156 ER    #>  5 2022-07-28 23:43:39    NA         NA     449. NA    156 AN2C 156 ER    #>  6 2022-07-28 23:43:40    NA         NA     450. NA    156 AN2C 156 ER    #>  7 2022-07-28 23:43:41    NA         NA     451. NA    156 AN2C 156 ER    #>  8 2022-07-28 23:43:42    NA         NA     451. NA    156 AN2C 156 ER    #>  9 2022-07-28 23:43:43    NA         NA     453. NA    156 AN2C 156 ER    #> 10 2022-07-28 23:43:44    NA         NA     453. NA    156 AN2C 156 ER    #> # ℹ 1,241 more rows #> # ℹ 22 more variables: f_start <dttm>, f_end <dttm>, f_fluxID <dbl>, #> #   n_conc <dbl>, ratio <dbl>, flag <lgl>, f_time <dbl>, f_cut <chr>, #> #   Cm_est <dbl>, a_est <dbl>, b_est <dbl>, tz_est <dbl>, f_Cz <dbl>, #> #   time_diff <dbl>, f_Cm <dbl>, f_a <dbl>, f_b <dbl>, f_tz <dbl>, #> #   f_slope_tz <dbl>, f_fit <dbl>, f_fit_slope <dbl>, f_start_z <dttm>"},{"path":"https://jogaudard.github.io/fluxible/reference/slopes60lin.html","id":null,"dir":"Reference","previous_headings":"","what":"Slopes for each flux — slopes60lin","title":"Slopes for each flux — slopes60lin","text":"Slopes linear fit flux 60 seconds cut end flux.","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/slopes60lin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Slopes for each flux — slopes60lin","text":"","code":"slopes60lin"},{"path":"https://jogaudard.github.io/fluxible/reference/slopes60lin.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Slopes for each flux — slopes60lin","text":"tibble 1251 rows 22 variables datetime Datetime CO2 concentration recorded. temp_air Air temperature inside flux chamber Celsius. temp_soil Ground temperature inside flux chamber Celsius. conc CO2 concentration ppm. PAR Photosyntethically active radiation inside chamber micromol/s/sqm. turfID Unique ID turf measurement took place. type Type measurement: ecosystems respiration (ER) net ecosystem exchange (NEE). start Datetime measurement started. end Datetime measurement ended. fluxID Unique ID flux. n_conc Number data point per flux. ratio Ratio n_conc length measurement (seconds). flag Data quality flags. time Time variable flux seconds. cut Indicating measurement kept (keep) discarded (cut). p.value P-value linear model CO2 concentration time. r.squared R squared linear model CO2 concentration time. adj.r.squared Adjusted R squared linear model CO2 concentration time. intercept Intercept linear model CO2 concentration time. slope Slope linear model CO2 concentration time. fit Output linear model CO2 concentration time.","code":""},{"path":"https://jogaudard.github.io/fluxible/reference/slopes60lin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Slopes for each flux — slopes60lin","text":"","code":"slopes60lin #> # A tibble: 1,251 × 21 #>    f_datetime          temp_air temp_soil f_conc   PAR turfID       type  #>    <dttm>                 <dbl>     <dbl>  <dbl> <dbl> <fct>        <fct> #>  1 2022-07-28 23:43:35    NA         NA     447. NA    156 AN2C 156 ER    #>  2 2022-07-28 23:43:36     7.22      10.9   447.  1.68 156 AN2C 156 ER    #>  3 2022-07-28 23:43:37    NA         NA     448. NA    156 AN2C 156 ER    #>  4 2022-07-28 23:43:38    NA         NA     449. NA    156 AN2C 156 ER    #>  5 2022-07-28 23:43:39    NA         NA     449. NA    156 AN2C 156 ER    #>  6 2022-07-28 23:43:40    NA         NA     450. NA    156 AN2C 156 ER    #>  7 2022-07-28 23:43:41    NA         NA     451. NA    156 AN2C 156 ER    #>  8 2022-07-28 23:43:42    NA         NA     451. NA    156 AN2C 156 ER    #>  9 2022-07-28 23:43:43    NA         NA     453. NA    156 AN2C 156 ER    #> 10 2022-07-28 23:43:44    NA         NA     453. NA    156 AN2C 156 ER    #> # ℹ 1,241 more rows #> # ℹ 14 more variables: f_start <dttm>, f_end <dttm>, f_fluxID <fct>, #> #   n_conc <dbl>, ratio <dbl>, flag <chr>, f_time <dbl>, f_cut <fct>, #> #   f_pvalue <dbl>, f_rsquared <dbl>, f_adj_rsquared <dbl>, f_intercept <dbl>, #> #   f_slope <dbl>, f_fit <dbl>"}]
